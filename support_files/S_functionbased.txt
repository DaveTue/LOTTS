function [function_name](block)
% Level-2 MATLAB file S-Function for interface of the [function_name].

%   Developed by David Manrique
%	Last update April 17th 2023

  setup(block);
  
%endfunction

function setup(block)
  
  %% block.NumDialogPrms  = 1;
  
  %% Register number of input and output ports
  block.NumInputPorts  = [output_num];
  block.NumOutputPorts = [input_num];

  %% Setup functional port properties to dynamically
  %% inherited.
  block.SetPreCompInpPortInfoToDynamic;
  block.SetPreCompOutPortInfoToDynamic;
 
 %[init_output_loop]
  block.InputPort([i]).Dimensions        = 1;
  block.InputPort([i]).SamplingMode        = 'Sample';
  block.InputPort([i]).DirectFeedthrough = false;
 %[end_output_loop]
 
 %[init_input_loop]
  block.OutputPort([i]).Dimensions       = 1;
  block.OutputPort([i]).SamplingMode = 'Sample';
% [end_input_loop] 
 
  %% Set block sample time to  ingeretance [-1 0]
  block.SampleTimes = [-1 0];
  
  %% Set the block simStateCompliance to default (i.e., same as a built-in block)
  block.SimStateCompliance = 'DefaultSimState';

  %% Register methods
  %block.RegBlockMethod('PostPropagationSetup',    @DoPostPropSetup);
  %block.RegBlockMethod('InitializeConditions',    @InitConditions);  
  block.RegBlockMethod('Outputs',                 @Output);  
  block.RegBlockMethod('Update',                  @Update);  

 %endfunction 
  %function DoPostPropSetup(block)

  %% Setup Dwork
  %block.NumDworks = 1;
  %block.Dwork(1).Name = 'x0'; 
  %block.Dwork(1).Dimensions      = 1;
  %block.Dwork(1).DatatypeID      = 0;
  %block.Dwork(1).Complexity      = 'Real';
  %block.Dwork(1).UsedAsDiscState = true;

%endfunction

%function InitConditions(block)

  %% Initialize Dwork
  %block.Dwork(1).Data = block.DialogPrm(1).Data;
  
%endfunction

function Output(block)
  
%  [init_input_loop]
  
  input_var_[i] = evalin('base', '[name_input_var]');
 
  block.OutputPort([i]).Data = double(input_var_[i]);
 
% [end_input_loop] 
  
%endfunction

function Update(block)

  %block.Dwork(1).Data = block.InputPort(1).Data;
  
  %[init_output_loop]
  
 
  output_var_[i] = block.InputPort([i]).Data;
  assignin('base','[name_output_var]',output_var_[i]);
  %[end_output_loop]

%endfunction